AWSTemplateFormatVersion: "2010-09-09"
Description: "Create an Ubuntu instnace in aws"
Parameters:
  pCreationDate:
    Type: String
Mappings:
  RegionMap:
    us-west-2: 
      AMI: "ami-e251209a"
    us-west-1: 
      AMI: "ami-25110f45"
Resources:
  MyInstance:
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content:
                !Sub |
                  <html><body> This is test webpage </body></html>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", AMI ]
      KeyName: "imsubbu"
      InstanceType: "t2.micro"
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sdm"
          Ebs:
            VolumeType: "io1"
            Iops: "100"
            DeleteOnTermination: "true"
            VolumeSize: "20"
      Tags:
        -
          Key: "Name"
          Value: "Testec2-1"
        -
          Key: "Created"
          Value: !Ref pCreationDate
        -
          Key: "JobTrigger"
          Value: "Jenkins Trigger"
        - 
          Key: JoinDetails
          Value: !Join [ " ", [EC2, Instance, with, Fn, Join ] ]
      SecurityGroups:
        - !Ref MysecurityGroup
 #     NetworkInterfaces:
 #         -
 #           GroupSet: [ !Ref MysecurityGroup ]
 #           AssociatePublicIpAddress: true
 #           DeviceIndex: 0
 #           DeleteOnTermination: true
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash -xe
            #ensure AWS cfn bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # install the files and packages from Metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName}  --resource MyInstance  --region ${AWS::Region}
    DependsOn: MysecurityGroup
  MysecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable SSH access
      GroupName: "TestWebserverSecurityGroup"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
      Tags:
        -
          Key: "Name"
          Value: "testwebserversecuritygroup"
Outputs:
  ServerDns:
    Value: !GetAtt
      - MyInstance
      - PrivateDnsName